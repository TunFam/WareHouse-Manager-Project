
package ws;

import java.util.List;
import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "nhanvienService", targetNamespace = "http://ws/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface NhanvienService {


    /**
     * 
     * @param a
     * @return
     *     returns java.util.List<ws.Nhanvien>
     */
    @WebMethod(operationName = "Find")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Find", targetNamespace = "http://ws/", className = "ws.Find")
    @ResponseWrapper(localName = "FindResponse", targetNamespace = "http://ws/", className = "ws.FindResponse")
    @Action(input = "http://ws/nhanvienService/FindRequest", output = "http://ws/nhanvienService/FindResponse")
    public List<Nhanvien> find(
        @WebParam(name = "a", targetNamespace = "")
        String a);

    /**
     * 
     * @param a
     */
    @WebMethod(operationName = "delete_nv")
    @Oneway
    @RequestWrapper(localName = "delete_nv", targetNamespace = "http://ws/", className = "ws.DeleteNv")
    @Action(input = "http://ws/nhanvienService/delete_nv")
    public void deleteNv(
        @WebParam(name = "a", targetNamespace = "")
        String a);

    /**
     * 
     * @param a
     * @param b
     * @param c
     * @param d
     * @param e
     * @param g
     * @param h
     * @param k
     */
    @WebMethod(operationName = "insert_nv")
    @Oneway
    @RequestWrapper(localName = "insert_nv", targetNamespace = "http://ws/", className = "ws.InsertNv")
    @Action(input = "http://ws/nhanvienService/insert_nv")
    public void insertNv(
        @WebParam(name = "a", targetNamespace = "")
        String a,
        @WebParam(name = "b", targetNamespace = "")
        String b,
        @WebParam(name = "c", targetNamespace = "")
        String c,
        @WebParam(name = "d", targetNamespace = "")
        int d,
        @WebParam(name = "e", targetNamespace = "")
        String e,
        @WebParam(name = "g", targetNamespace = "")
        String g,
        @WebParam(name = "h", targetNamespace = "")
        String h,
        @WebParam(name = "k", targetNamespace = "")
        double k);

    /**
     * 
     * @param a
     * @param b
     * @param c
     * @param d
     * @param e
     * @param g
     * @param h
     * @param k
     */
    @WebMethod(operationName = "update_nv")
    @Oneway
    @RequestWrapper(localName = "update_nv", targetNamespace = "http://ws/", className = "ws.UpdateNv")
    @Action(input = "http://ws/nhanvienService/update_nv")
    public void updateNv(
        @WebParam(name = "a", targetNamespace = "")
        String a,
        @WebParam(name = "b", targetNamespace = "")
        String b,
        @WebParam(name = "c", targetNamespace = "")
        String c,
        @WebParam(name = "d", targetNamespace = "")
        int d,
        @WebParam(name = "e", targetNamespace = "")
        String e,
        @WebParam(name = "g", targetNamespace = "")
        String g,
        @WebParam(name = "h", targetNamespace = "")
        String h,
        @WebParam(name = "k", targetNamespace = "")
        double k);

    /**
     * 
     * @return
     *     returns java.util.List<ws.Nhanvien>
     */
    @WebMethod(operationName = "get_data")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "get_data", targetNamespace = "http://ws/", className = "ws.GetData")
    @ResponseWrapper(localName = "get_dataResponse", targetNamespace = "http://ws/", className = "ws.GetDataResponse")
    @Action(input = "http://ws/nhanvienService/get_dataRequest", output = "http://ws/nhanvienService/get_dataResponse")
    public List<Nhanvien> getData();

}
