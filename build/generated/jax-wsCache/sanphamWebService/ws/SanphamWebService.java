
package ws;

import java.util.List;
import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "sanphamWebService", targetNamespace = "http://ws/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SanphamWebService {


    /**
     * 
     * @return
     *     returns java.util.List<ws.Danhmuc>
     */
    @WebMethod(operationName = "getAll_danhmuc")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAll_danhmuc", targetNamespace = "http://ws/", className = "ws.GetAllDanhmuc")
    @ResponseWrapper(localName = "getAll_danhmucResponse", targetNamespace = "http://ws/", className = "ws.GetAllDanhmucResponse")
    @Action(input = "http://ws/sanphamWebService/getAll_danhmucRequest", output = "http://ws/sanphamWebService/getAll_danhmucResponse")
    public List<Danhmuc> getAllDanhmuc();

    /**
     * 
     * @param a
     * @param b
     * @param c
     * @param d
     * @param e
     * @param f
     * @param g
     * @param h
     */
    @WebMethod(operationName = "update_sanpham")
    @Oneway
    @RequestWrapper(localName = "update_sanpham", targetNamespace = "http://ws/", className = "ws.UpdateSanpham")
    @Action(input = "http://ws/sanphamWebService/update_sanpham")
    public void updateSanpham(
        @WebParam(name = "a", targetNamespace = "")
        String a,
        @WebParam(name = "b", targetNamespace = "")
        String b,
        @WebParam(name = "c", targetNamespace = "")
        String c,
        @WebParam(name = "d", targetNamespace = "")
        String d,
        @WebParam(name = "e", targetNamespace = "")
        double e,
        @WebParam(name = "f", targetNamespace = "")
        String f,
        @WebParam(name = "g", targetNamespace = "")
        int g,
        @WebParam(name = "h", targetNamespace = "")
        String h);

    /**
     * 
     * @param a
     * @param b
     * @param c
     * @param d
     * @param e
     * @param f
     * @param g
     * @param h
     */
    @WebMethod(operationName = "save_sanpham")
    @Oneway
    @RequestWrapper(localName = "save_sanpham", targetNamespace = "http://ws/", className = "ws.SaveSanpham")
    @Action(input = "http://ws/sanphamWebService/save_sanpham")
    public void saveSanpham(
        @WebParam(name = "a", targetNamespace = "")
        String a,
        @WebParam(name = "b", targetNamespace = "")
        String b,
        @WebParam(name = "c", targetNamespace = "")
        String c,
        @WebParam(name = "d", targetNamespace = "")
        String d,
        @WebParam(name = "e", targetNamespace = "")
        double e,
        @WebParam(name = "f", targetNamespace = "")
        String f,
        @WebParam(name = "g", targetNamespace = "")
        int g,
        @WebParam(name = "h", targetNamespace = "")
        String h);

    /**
     * 
     * @param a
     * @return
     *     returns java.util.List<ws.Sanpham>
     */
    @WebMethod(operationName = "Find_sanpham")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Find_sanpham", targetNamespace = "http://ws/", className = "ws.FindSanpham")
    @ResponseWrapper(localName = "Find_sanphamResponse", targetNamespace = "http://ws/", className = "ws.FindSanphamResponse")
    @Action(input = "http://ws/sanphamWebService/Find_sanphamRequest", output = "http://ws/sanphamWebService/Find_sanphamResponse")
    public List<Sanpham> findSanpham(
        @WebParam(name = "a", targetNamespace = "")
        String a);

    /**
     * 
     * @param a
     */
    @WebMethod(operationName = "delete_sanpham")
    @Oneway
    @RequestWrapper(localName = "delete_sanpham", targetNamespace = "http://ws/", className = "ws.DeleteSanpham")
    @Action(input = "http://ws/sanphamWebService/delete_sanpham")
    public void deleteSanpham(
        @WebParam(name = "a", targetNamespace = "")
        String a);

    /**
     * 
     * @return
     *     returns java.util.List<ws.Sanpham>
     */
    @WebMethod(operationName = "getAll_sanpham")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAll_sanpham", targetNamespace = "http://ws/", className = "ws.GetAllSanpham")
    @ResponseWrapper(localName = "getAll_sanphamResponse", targetNamespace = "http://ws/", className = "ws.GetAllSanphamResponse")
    @Action(input = "http://ws/sanphamWebService/getAll_sanphamRequest", output = "http://ws/sanphamWebService/getAll_sanphamResponse")
    public List<Sanpham> getAllSanpham();

    /**
     * 
     * @param a
     * @return
     *     returns java.util.List<ws.Sanpham>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "loc", targetNamespace = "http://ws/", className = "ws.Loc")
    @ResponseWrapper(localName = "locResponse", targetNamespace = "http://ws/", className = "ws.LocResponse")
    @Action(input = "http://ws/sanphamWebService/locRequest", output = "http://ws/sanphamWebService/locResponse")
    public List<Sanpham> loc(
        @WebParam(name = "a", targetNamespace = "")
        String a);

}
